import os
import requests
import re

# L·∫•y token v√† th√¥ng tin repo t·ª´ bi·∫øn m√¥i tr∆∞·ªùng
TOKEN = os.getenv('GH_TOKEN')
REPO_OWNER = os.getenv('REPO_OWNER')
REPO_NAME = os.getenv('REPO_NAME')

if not TOKEN or not REPO_OWNER or not REPO_NAME:
    print("L·ªói: Thi·∫øu bi·∫øn m√¥i tr∆∞·ªùng (GH_TOKEN, REPO_OWNER, REPO_NAME).")
    exit(1)

headers = {
    'Authorization': f'token {TOKEN}',
    'Accept': 'application/vnd.github.v3+json'
}

# L·∫•y s·ªë l∆∞·ª£t xem (Views)
try:
    views_url = f'https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/traffic/views'
    views_response = requests.get(views_url, headers=headers)
    views_response.raise_for_status() # B√°o l·ªói n·∫øu request th·∫•t b·∫°i
    views_data = views_response.json()
    total_views = views_data.get('count', 0)
    unique_views = views_data.get('uniques', 0)
except requests.exceptions.RequestException as e:
    print(f"L·ªói khi l·∫•y l∆∞·ª£t xem: {e}")
    total_views = "N/A"
    unique_views = "N/A"

# L·∫•y s·ªë l∆∞·ª£t clone (Clones)
try:
    clones_url = f'https://api.github.com/repos/{REPO_OWNER}/{REPO_NAME}/traffic/clones'
    clones_response = requests.get(clones_url, headers=headers)
    clones_response.raise_for_status() # B√°o l·ªói n·∫øu request th·∫•t b·∫°i
    clones_data = clones_response.json()
    total_clones = clones_data.get('count', 0)
    unique_clones = clones_data.get('uniques', 0)
except requests.exceptions.RequestException as e:
    print(f"L·ªói khi l·∫•y l∆∞·ª£t clone: {e}")
    total_clones = "N/A"
    unique_clones = "N/A"

# C·∫≠p nh·∫≠t README
readme_path = 'README.md'
try:
    with open(readme_path, 'r', encoding='utf-8') as f:
        readme_content = f.read()

    # ƒê·ªãnh d·∫°ng chu·ªói ƒë·ªÉ ch√®n v√†o README
    # S·ª¨A L·ªñI T·∫†I ƒê√ÇY: ƒê·∫£m b·∫£o f-string ƒë∆∞·ª£c ƒë√≥ng ƒë√∫ng c√°ch v√† n·ªôi dung ƒë∆∞·ª£c ƒë·ªãnh d·∫°ng ƒë√∫ng.
    stats_string = (
        "\n"
        "### üìä Th·ªëng k√™ Kho l∆∞u tr·ªØ\n"
        "\n"
        "| Lo·∫°i         | T·ªïng c·ªông | Duy nh·∫•t |\n"
        "| :----------- | :--------: | :-------: |\n"
        f"| **L∆∞·ª£t xem** | {total_views}   | {unique_views}  |\n"
        f"| **L∆∞·ª£t clone**| {total_clones}   | {unique_clones}  |\n"
    )


    # S·ª≠ d·ª•ng bi·ªÉu th·ª©c ch√≠nh quy ƒë·ªÉ t√¨m v√† thay th·∫ø n·ªôi dung gi·ªØa c√°c comment
    # ƒê·∫£m b·∫£o c√°c th·∫ª v√† c√≥ trong README.md
    updated_content = re.sub(
        r'().*?()',
        f'\\1{stats_string}\\2', # ƒê√£ lo·∫°i b·ªè m·ªôt s·ªë k√Ω t·ª± xu·ªëng d√≤ng th·ª´a
        readme_content,
        flags=re.DOTALL | re.IGNORECASE
    )

    with open(readme_path, 'w', encoding='utf-8') as f:
        f.write(updated_content)

    print("README.md ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t th√†nh c√¥ng!")

except FileNotFoundError:
    print(f"L·ªói: Kh√¥ng t√¨m th·∫•y t·ªáp README.md t·∫°i {readme_path}")
    exit(1)
except Exception as e:
    print(f"ƒê√£ x·∫£y ra l·ªói khi c·∫≠p nh·∫≠t README: {e}")
    exit(1)
